CREATE OR REPLACE PROCEDURE P72_GENERATE_CNTRPRIMID(P_MKTISSOID IN VARCHAR DEFAULT NULL)
LANGUAGE PLPGSQL
AS $PROCEDURE$
DECLARE 
   V_MKT_ISS_OID VARCHAR(10);
   V_ISID_OID VARCHAR(10);
   
                
                
  MKT_ISS_OID_LIST CURSOR FOR
			
			SELECT MKT_ISS_OID, INSTR_ID, MKT_OID, DATA_SRC_ID
					FROM FT_T_MKIS MKIS WHERE OFCL_PLACE_LISTING_IND ='Y'
						AND (MKIS.END_TMS IS NULL OR MKIS.END_TMS > SYSDATE())
						AND NOT EXISTS (SELECT'X' FROM FT_T_ISID ISID, FT_T_MIXR MIXR
						WHERE ISID.ISID_OID=MIXR.ISID_OID
						AND MIXR.MKT_ISS_OID=MKIS.MKT_ISS_OID
						AND ISID.ID_CTXT_TYP='CNTRPRIMID'
						AND (ISID.END_TMS IS NULL OR ISID.END_TMS > SYSDATE())
						AND (MIXR.END_TMS IS NULL OR MIXR.END_TMS > SYSDATE()))
						AND (P_MKTISSOID IS NULL OR MKIS.MKT_ISS_OID=P_MKTISSOID);	


V_CODE  VARCHAR (10000);
V_ERRM  VARCHAR(10000);			

			
BEGIN

	RAISE INFO 'GENERATING CNTRPRIMID ';     
				
	 FOR ROW_MKT_ISS_OID_LIST IN MKT_ISS_OID_LIST LOOP

	 RAISE INFO 'INSIDE CURSOR FOR COUNTRY PRIMARY ID GENERATION %', ROW_MKT_ISS_OID_LIST.MKT_ISS_OID;

	  BEGIN
			SELECT NEW_OID() INTO V_ISID_OID FROM DUAL;
			
			INSERT INTO FT_T_ISID (ISID_OID, INSTR_ID, MKT_OID, ISS_ID, ID_CTXT_TYP, 
									START_TMS, LAST_CHG_TMS, LAST_CHG_USR_ID, DATA_SRC_ID, GLOBAL_UNIQ_IND)
						VALUES(V_ISID_OID, ROW_MKT_ISS_OID_LIST.INSTR_ID, ROW_MKT_ISS_OID_LIST.MKT_OID, P72GETCNTRPRIMID_MKIS(),'CNTRPRIMID',
								SYSDATE(), SYSDATE(), 'P72:PROC', ROW_MKT_ISS_OID_LIST.DATA_SRC_ID, 'N');
								
			INSERT INTO FT_T_MIXR (MIXR_OID, ISID_OID, MKT_ISS_OID, TRDNG_STAT_TYP, DATA_STAT_TYP, 
									START_TMS, LAST_CHG_TMS, LAST_CHG_USR_ID, DATA_SRC_ID)
						VALUES(NEW_OID(), V_ISID_OID, ROW_MKT_ISS_OID_LIST.MKT_ISS_OID, 'ACTIVE','ACTIVE',
								SYSDATE(), SYSDATE(), 'P72:PROC', ROW_MKT_ISS_OID_LIST.DATA_SRC_ID);
			
		
	EXCEPTION
		WHEN OTHERS THEN 
			ROLLBACK;
			V_CODE := SQLSTATE;
			V_ERRM := SQLERRM;
			 
			 RAISE NOTICE '%,%',V_CODE,V_ERRM;
			   
		END;              
	COMMIT;   
   END LOOP;
END ;
$PROCEDURE$
;